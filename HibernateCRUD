import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import jakarta.persistence.*;

public class HibernateCRUD {

    // Entity class
    @Entity
    @Table(name = "students")
    public static class Student {
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private int id;
        private String name;
        private int age;

        public Student() {}
        public Student(String name, int age) {
            this.name = name;
            this.age = age;
        }

        public int getId() { return id; }
        public String getName() { return name; }
        public int getAge() { return age; }

        public void setName(String name) { this.name = name; }
        public void setAge(int age) { this.age = age; }

        @Override
        public String toString() {
            return "Student{id=" + id + ", name='" + name + "', age=" + age + "}";
        }
    }

    // Main method to demonstrate CRUD
    public static void main(String[] args) {
        Configuration cfg = new Configuration()
                .addAnnotatedClass(Student.class)
                .setProperty("hibernate.connection.driver_class", "com.mysql.cj.jdbc.Driver")
                .setProperty("hibernate.connection.url", "jdbc:mysql://localhost:3306/your_db")
                .setProperty("hibernate.connection.username", "root")
                .setProperty("hibernate.connection.password", "your_password")
                .setProperty("hibernate.dialect", "org.hibernate.dialect.MySQL8Dialect")
                .setProperty("hibernate.hbm2ddl.auto", "update")
                .setProperty("show_sql", "true");

        SessionFactory factory = cfg.buildSessionFactory();

        // CREATE
        Session session = factory.openSession();
        Transaction tx = session.beginTransaction();
        Student s1 = new Student("Alice", 22);
        session.save(s1);
        tx.commit();
        session.close();
        System.out.println("Created: " + s1);

        // READ
        session = factory.openSession();
        Student fetched = session.get(Student.class, s1.getId());
        session.close();
        System.out.println("Read: " + fetched);

        // UPDATE
        session = factory.openSession();
        tx = session.beginTransaction();
        fetched.setName("Alicia");
        session.update(fetched);
        tx.commit();
        session.close();
        System.out.println("Updated: " + fetched);

        // DELETE
        session = factory.openSession();
        tx = session.beginTransaction();
        session.delete(fetched);
        tx.commit();
        session.close();
        System.out.println("Deleted: " + fetched);

        factory.close();
    }
}
